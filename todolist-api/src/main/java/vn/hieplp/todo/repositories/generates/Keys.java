/*
 * This file is generated by jOOQ.
 */
package vn.hieplp.todo.repositories.generates;


import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import vn.hieplp.todo.repositories.generates.tables.*;
import vn.hieplp.todo.repositories.generates.tables.records.*;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * todo.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<NoteRecord> KEY_NOTE_PRIMARY = Internal.createUniqueKey(Note.NOTE, DSL.name("KEY_note_PRIMARY"), new TableField[]{Note.NOTE.NOTEID}, true);
    public static final UniqueKey<PasswordRecord> KEY_PASSWORD_PRIMARY = Internal.createUniqueKey(Password.PASSWORD, DSL.name("KEY_password_PRIMARY"), new TableField[]{Password.PASSWORD.USERID}, true);
    public static final UniqueKey<TaskRecord> KEY_TASK_PRIMARY = Internal.createUniqueKey(Task.TASK, DSL.name("KEY_task_PRIMARY"), new TableField[]{Task.TASK.TASKID}, true);
    public static final UniqueKey<TemplateRecord> KEY_TEMPLATE_PRIMARY = Internal.createUniqueKey(Template.TEMPLATE, DSL.name("KEY_template_PRIMARY"), new TableField[]{Template.TEMPLATE.TEMPLATENAME, Template.TEMPLATE.SENDVIA}, true);
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_PRIMARY"), new TableField[]{User.USER.USERID}, true);
    public static final UniqueKey<UserRecord> KEY_USER_USER_EMAIL_UINDEX = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_user_email_uindex"), new TableField[]{User.USER.EMAIL}, true);
}
