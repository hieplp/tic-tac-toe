/*
 * This file is generated by jOOQ.
 */
package vn.hieplp.todo.repositories.generates.tables.daos;


import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import vn.hieplp.todo.repositories.generates.tables.Task;
import vn.hieplp.todo.repositories.generates.tables.records.TaskRecord;

import java.time.LocalDateTime;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TaskDao extends DAOImpl<TaskRecord, vn.hieplp.todo.repositories.generates.tables.pojos.Task, String> {

    /**
     * Create a new TaskDao without any configuration
     */
    public TaskDao() {
        super(Task.TASK, vn.hieplp.todo.repositories.generates.tables.pojos.Task.class);
    }

    /**
     * Create a new TaskDao with an attached configuration
     */
    public TaskDao(Configuration configuration) {
        super(Task.TASK, vn.hieplp.todo.repositories.generates.tables.pojos.Task.class, configuration);
    }

    @Override
    public String getId(vn.hieplp.todo.repositories.generates.tables.pojos.Task object) {
        return object.getTaskid();
    }

    /**
     * Fetch records that have <code>taskId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchRangeOfTaskid(String lowerInclusive, String upperInclusive) {
        return fetchRange(Task.TASK.TASKID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>taskId IN (values)</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchByTaskid(String... values) {
        return fetch(Task.TASK.TASKID, values);
    }

    /**
     * Fetch a unique record that has <code>taskId = value</code>
     */
    public vn.hieplp.todo.repositories.generates.tables.pojos.Task fetchOneByTaskid(String value) {
        return fetchOne(Task.TASK.TASKID, value);
    }

    /**
     * Fetch records that have <code>userId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchRangeOfUserid(String lowerInclusive, String upperInclusive) {
        return fetchRange(Task.TASK.USERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>userId IN (values)</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchByUserid(String... values) {
        return fetch(Task.TASK.USERID, values);
    }

    /**
     * Fetch records that have <code>taskTitle BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchRangeOfTasktitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(Task.TASK.TASKTITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>taskTitle IN (values)</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchByTasktitle(String... values) {
        return fetch(Task.TASK.TASKTITLE, values);
    }

    /**
     * Fetch records that have <code>taskDescription BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchRangeOfTaskdescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Task.TASK.TASKDESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>taskDescription IN (values)</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchByTaskdescription(String... values) {
        return fetch(Task.TASK.TASKDESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>taskDate BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchRangeOfTaskdate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Task.TASK.TASKDATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>taskDate IN (values)</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchByTaskdate(LocalDateTime... values) {
        return fetch(Task.TASK.TASKDATE, values);
    }

    /**
     * Fetch records that have <code>taskImages BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchRangeOfTaskimages(String lowerInclusive, String upperInclusive) {
        return fetchRange(Task.TASK.TASKIMAGES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>taskImages IN (values)</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchByTaskimages(String... values) {
        return fetch(Task.TASK.TASKIMAGES, values);
    }

    /**
     * Fetch records that have <code>taskStatus BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchRangeOfTaskstatus(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Task.TASK.TASKSTATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>taskStatus IN (values)</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchByTaskstatus(Integer... values) {
        return fetch(Task.TASK.TASKSTATUS, values);
    }

    /**
     * Fetch records that have <code>createdBy BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchRangeOfCreatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Task.TASK.CREATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>createdBy IN (values)</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchByCreatedby(String... values) {
        return fetch(Task.TASK.CREATEDBY, values);
    }

    /**
     * Fetch records that have <code>createdAt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchRangeOfCreatedat(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Task.TASK.CREATEDAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>createdAt IN (values)</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchByCreatedat(LocalDateTime... values) {
        return fetch(Task.TASK.CREATEDAT, values);
    }

    /**
     * Fetch records that have <code>modifiedBy BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchRangeOfModifiedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Task.TASK.MODIFIEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modifiedBy IN (values)</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchByModifiedby(String... values) {
        return fetch(Task.TASK.MODIFIEDBY, values);
    }

    /**
     * Fetch records that have <code>modifiedAt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchRangeOfModifiedat(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Task.TASK.MODIFIEDAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modifiedAt IN (values)</code>
     */
    public List<vn.hieplp.todo.repositories.generates.tables.pojos.Task> fetchByModifiedat(LocalDateTime... values) {
        return fetch(Task.TASK.MODIFIEDAT, values);
    }
}
